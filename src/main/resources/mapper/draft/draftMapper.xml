<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ldb.groupware.mapper.mybatis.draft.DraftMapper">

    <!-- 내전자결재 목록 조회   -->
    <select id="getMyDraftList" resultType="DraftListDto">
        SELECT
        a.doc_id AS docId,
        m.mem_name AS writer,
        a.form_code AS formCode,
        a.doc_title AS docTitle,
        a.doc_endDate AS docEndDate,
        a.status AS status,
        alarm.read_yn as readYn,
        approver1.mem_name AS approver1Name,
        approver2.mem_name AS approver2Name
        FROM approval_document a
        LEFT JOIN member m ON a.mem_id = m.mem_id
        LEFT JOIN approval_line l1 ON l1.doc_id = a.doc_id AND l1.step_order = 1 AND l1.ref_yn = 'N'
        LEFT JOIN member approver1 ON l1.mem_id = approver1.mem_id
        LEFT JOIN approval_line l2 ON l2.doc_id = a.doc_id AND l2.step_order = 2 AND l2.ref_yn = 'N'
        LEFT JOIN member approver2 ON l2.mem_id = approver2.mem_id
        left join alarm alarm on alarm.mem_id = a.mem_id and a.doc_id = alarm.ref_doc_id and alarm.step_order = 0
        WHERE a.mem_id = #{memId}
        AND a.del_yn = 'N'

        <if test="dto.searchStatus != null and dto.searchStatus != ''">
            AND a.status = #{dto.searchStatus}
        </if>

        <if test="dto.searchType != null and dto.keyword != null and dto.keyword != ''">
            <choose>
                <when test="'title'.equals(dto.searchType)">
                    AND a.doc_title LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
                <when test="'content'.equals(dto.searchType)">
                    AND a.doc_content LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
            </choose>
        </if>

        ORDER BY a.doc_id DESC
        LIMIT #{dto.startNum}, #{dto.itemsPerPage}
    </select>

    <select id="getMyDraftCount" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM approval_document d
        WHERE d.mem_id = #{memId}
        AND d.del_yn = 'N'

        <if test="searchStatus != null and searchStatus != ''">
            AND d.status = #{searchStatus}
        </if>

        <if test="searchType != null and keyword != null and keyword != ''">
            <choose>
                <when test="searchType == 'title'">
                    AND d.doc_title LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == 'content'">
                    AND d.doc_content LIKE CONCAT('%', #{keyword}, '%')
                </when>
            </choose>
        </if>
    </select>

    <select id="getReceivedDraftCount" resultType="int">
        SELECT COUNT(*)
        FROM approval_document a
        WHERE a.doc_id IN (
        SELECT DISTINCT l.doc_id
        FROM approval_line l
        WHERE l.mem_id = #{memId}
        )
        AND a.del_yn = 'N'

        <if test="dto.searchStatus != null and dto.searchStatus != ''">
            AND a.status = #{dto.searchStatus}
        </if>

        <if test="dto.searchType != null and dto.keyword != null and dto.keyword != ''">
            <choose>
                <when test="'title'.equals(dto.searchType)">
                    AND a.doc_title LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
                <when test="'content'.equals(dto.searchType)">
                    AND a.doc_content LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
            </choose>
        </if>
    </select>

    <select id="getMemberList" resultType="DraftForMemberDto">
        SELECT m.mem_id as mem_id,
               m.mem_name as mem_name,
               d.dept_name as dept_name,
               r.rank_name as rank_name,
               m.mem_email as mem_email
        FROM member m
        LEFT JOIN dept d ON m.dept_id = d.dept_id
        LEFT JOIN rank r ON m.rank_id = r.rank_id
    </select>

    <!-- 잔여연차 조회 -->
    <select id="getRemainAnnual">
        SELECT remain_days
        FROM annual_leave
        WHERE mem_id = #{memId}
        and year = year(CURDATE())
    </select>

    <insert id="insertApprovalDocument" useGeneratedKeys="true" keyProperty="dto.docId">
        INSERT INTO approval_document
        (form_code, doc_title, doc_content, mem_id, created_at, status, del_yn, doc_endDate)
        VALUES
            (#{dto.formCode}, #{dto.title},#{dto.content}, #{memId}, NOW(), #{status}, 'N', #{dto.docEndDate})
    </insert>

    <insert id="insertFormAnnualLeave" parameterType="FormAnnualLeave">
        INSERT INTO `form_annual_leave` (
            `doc_id`,
            `form_code`,
            `leave_code`,
            `start_date`,
            `end_date`,
            `request_days`,
            `annual_content`
        ) VALUES (
                     #{docId},
                     #{formCode},
                     #{leaveCode},
                     #{startDate},
                     #{endDate},
                     #{requestDays},
                     #{annualContent}
                 )
    </insert>

    <insert id="insertApprovalLine">
        INSERT INTO approval_line (doc_id, mem_id, step_order, status, approved_at, approved_comment, ref_yn)
        VALUES (#{docId}, #{memId}, #{stepOrder}, 1, NOW(), NULL, #{refYn})
    </insert>

    <select id="getApprovalDocumentByDocId" resultType="DraftFormDto">
        SELECT a.doc_id as docId,
               a.mem_id as memId,
               a.form_code as formCode,
               a.doc_title as title,
               a.doc_content as content,
               a.doc_endDate as docEndDate,
               a.status as status,
               (SELECT mem_id FROM approval_line WHERE doc_id = #{docId} AND step_order = 1) AS approver1,
               (SELECT mem_id FROM approval_line WHERE doc_id = #{docId} AND step_order = 2) AS approver2
        FROM approval_document a
        WHERE a.doc_id = #{docId}
        AND   a.del_yn = 'N'
    </select>

    <!-- 내 전자결재 상세보기  -->
    <select id="getMyDraftDetail" resultType="DraftFormDto">
        SELECT
            a.doc_id AS docId,
            m.mem_name AS mem_name,  <!-- 기안자 -->
            a.form_code AS formCode, <!-- 전자결재 양식 -->
            a.doc_title AS title,
            a.doc_content AS content,
            a.doc_endDate AS docEndDate,
            a.status AS status,
            approver1.mem_id as approver1, <!-- 1차결재자 id -->
            approver2.mem_id as approver2, <!-- 2차결재자 id -->
            approver1.mem_name AS approver1Name, <!-- 1차결재자 이름 -->
            approver2.mem_name AS approver2Name <!-- 2차결재자 이름 -->
        FROM approval_document a
        LEFT JOIN member m ON a.mem_id = m.mem_id
        LEFT JOIN approval_line l1 ON l1.doc_id = a.doc_id AND l1.step_order = 1 AND l1.ref_yn = 'N'
        LEFT JOIN member approver1 ON l1.mem_id = approver1.mem_id
        LEFT JOIN approval_line l2 ON l2.doc_id = a.doc_id AND l2.step_order = 2 AND l2.ref_yn = 'N'
        LEFT JOIN member approver2 ON l2.mem_id = approver2.mem_id
        WHERE a.doc_id = #{docId}
          AND a.del_yn = 'N'
    </select>

    <select id="getFormAnnualLeave" resultType="FormAnnualLeave">
        SELECT * FROM form_annual_leave WHERE doc_id = #{docId}
    </select>

    <select id="getFormProject" resultType="FormProject">
        SELECT * FROM form_project WHERE doc_id = #{docId}
    </select>

    <select id="getFormExpense" resultType="FormExpense">
        SELECT * FROM form_expense WHERE doc_id = #{docId}
    </select>

    <select id="getFormResign" resultType="FormResign">
        SELECT * FROM form_resign WHERE doc_id = #{docId}
    </select>

    <update id="updateFormAnnualLeave" parameterType="FormAnnualLeave">
        UPDATE form_annual_leave
        SET leave_code = #{leaveCode},
            start_date = #{startDate},
            end_date = #{endDate},
            request_days = #{requestDays},
            annual_content = #{annualContent}
        WHERE doc_id = #{docId}
    </update>

    <update id="updateFormProject" parameterType="FormProject">
        UPDATE form_project
        SET project_name = #{projectName},
            pro_content = #{proContent},
            start_date = #{startDate},
            end_date = #{endDate}
        WHERE doc_id = #{docId}
    </update>

    <update id="updateFormExpense" parameterType="FormExpense">
        UPDATE form_expense
        SET use_date = #{useDate},
            ex_name = #{exName},
            ex_amount = #{exAmount},
            ex_content = #{exContent}
        WHERE doc_id = #{docId}
    </update>

    <update id="updateFormResign" parameterType="FormResign">
        UPDATE form_resign
        SET resign_date = #{resignDate}
        WHERE doc_id = #{docId}
    </update>

    <update id="updateApprovalDocument">
        UPDATE approval_document
        SET
            form_code = #{dto.formCode},
            doc_title = #{dto.title},
            doc_content = #{dto.content},
            mem_id = #{memId},
            status = #{status},
            updated_at = NOW(),
            doc_endDate = #{dto.docEndDate}
        WHERE
            doc_id = #{dto.docId}
    </update>

    <update id="updateApprovalDocumentStatus">
        UPDATE approval_document
        SET
            status = #{chgStatus},
            updated_at = NOW()
        WHERE
            doc_id = #{docId}
    </update>

    <update id="updateApprovalLine">
        UPDATE approval_line
        SET
            status = #{chgStatus},
            approved_at = NOW(),
            approved_comment = #{comment}
        WHERE
            doc_id = #{docId}
    </update>

    <insert id="insertFormProject" parameterType="FormProject">
        INSERT INTO form_project
            (doc_id, form_code, project_name, pro_content, start_date, end_date)
        VALUES
            (#{docId}, #{formCode}, #{projectName}, #{proContent}, #{startDate}, #{endDate})
    </insert>

    <insert id="insertFormExpense" parameterType="FormExpense">
        INSERT INTO form_expense
            (doc_id, form_code, use_date, ex_name, ex_amount, ex_content)
        VALUES
            (#{docId}, #{formCode}, #{useDate}, #{exName}, #{exAmount}, #{exContent})
    </insert>

    <insert id="insertFormResign" parameterType="FormResign">
        INSERT INTO form_resign
            (doc_id, form_code, resign_date)
        VALUES
            (#{docId}, #{formCode}, #{resignDate})
    </insert>

    <delete id="deleteApprovalDocument">
        DELETE FROM approval_document
        WHERE doc_id = #{docId}
        AND form_code = #{formCode}
        AND status = #{status}
    </delete>

    <!-- 휴가신청서 삭제 -->
    <delete id="deleteFormAnnualLeave">
        DELETE FROM form_annual_leave
        WHERE doc_id = #{docId}
    </delete>

    <!-- 프로젝트 제안서 삭제 -->
    <delete id="deleteFormProject">
        DELETE FROM form_project
        WHERE doc_id = #{docId}
    </delete>

    <!-- 지출결의서 삭제 -->
    <delete id="deleteFormExpense">
        DELETE FROM form_expense
        WHERE doc_id = #{docId}
    </delete>

    <!-- 사직서 삭제 -->
    <delete id="deleteFormResign">
        DELETE FROM form_resign
        WHERE doc_id = #{docId}
    </delete>

    <select id="getReceivedDraftList" resultType="DraftListDto">
        SELECT
        a.doc_id AS docId,
        m.mem_name AS writer,
        a.form_code AS formCode,
        a.doc_title AS docTitle,
        a.doc_endDate AS docEndDate,
        a.status AS status,
        al.read_yn as readYn,
        al.mem_id as receivedMemId,
        approver1.mem_name AS approver1Name,
        approver2.mem_name AS approver2Name
        FROM approval_document a
        LEFT JOIN member m
        ON a.mem_id = m.mem_id
        LEFT JOIN approval_line l1
        ON l1.doc_id = a.doc_id
        AND l1.step_order = 1
        AND l1.ref_yn = 'N'
        LEFT JOIN member approver1
        ON l1.mem_id = approver1.mem_id
        LEFT JOIN approval_line l2
        ON l2.doc_id = a.doc_id
        AND l2.step_order = 2
        AND l2.ref_yn = 'N'
        LEFT JOIN member approver2
        ON l2.mem_id = approver2.mem_id
        left join alarm al on al.mem_id = #{memId} and a.doc_id = al.ref_doc_id
        WHERE a.del_yn = 'N'
        AND a.doc_id IN (
        SELECT doc_id
        FROM approval_line
        WHERE mem_id = #{memId}
        )

        <if test="dto.searchStatus != null and dto.searchStatus != ''">
            AND a.status = #{dto.searchStatus}
        </if>

        <if test="dto.searchType != null and dto.keyword != null and dto.keyword != ''">
            <choose>
                <when test="'title'.equals(dto.searchType)">
                    AND a.doc_title LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
                <when test="'content'.equals(dto.searchType)">
                    AND a.doc_content LIKE CONCAT('%', #{dto.keyword}, '%')
                </when>
            </choose>
        </if>

        ORDER BY a.doc_id DESC
        LIMIT #{dto.startNum}, #{dto.itemsPerPage}
    </select>

    <!-- 이용자 연차정보 수정-->
    <update id="updateAnnualLeaveInfo">
        UPDATE annual_leave
        SET use_days = use_days + #{requestDays},  <!-- 사용일수 증가 -->
            remain_days = remain_days - #{requestDays} <!-- 잔여일수 감소 -->
            WHERE mem_id = #{memId}
            AND year = (
                        SELECT MAX(year)
                        FROM annual_leave
                        WHERE mem_id = #{memId}
                        )
    </update>

    <select id="getMyDraftSummary">
        SELECT *
        FROM approval_document
        WHERE mem_id = #{loginId}
        ORDER BY created_at DESC
            LIMIT 0, 5
    </select>

</mapper>