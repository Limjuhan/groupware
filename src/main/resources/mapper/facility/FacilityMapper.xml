<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ldb.groupware.mapper.mybatis.facility.FacilityMapper">

    <select id="countByType" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT fi.fac_id
        FROM facility_info fi
        LEFT JOIN facility_rent fr ON fi.fac_id = fr.fac_id
        <where>
            fi.del_yn = 'N'
            <if test="sDto.keyword != null and sDto.keyword != ''">
                AND (
                fi.fac_name LIKE CONCAT('%', #{sDto.keyword}, '%')
                OR fi.fac_id LIKE CONCAT('%', #{sDto.keyword}, '%')
                )
            </if>
            <if test="sDto.facType != null and sDto.facType != ''">
                AND fi.fac_type = #{sDto.facType}
            </if>
        </where>
        GROUP BY fi.fac_id
        <if test="sDto.rentYn != null and sDto.rentYn != ''">
            HAVING
            CASE
            WHEN SUM(CASE WHEN fr.rent_yn = 'N' THEN 1 ELSE 0 END) > 0 THEN 'N'
            ELSE 'Y'
            END = #{sDto.rentYn}
        </if>
        ) sub
    </select>

    <!--공용설비타입에 따른 내역조회 (rent_yn(반납여부)가 하나라도 N이 있다면 rentYn = 'N'  , 없다면 Y ) -->
    <!-- 반납처리를 했더라도 facility_rent테이블에서 지우는게 아니기에 이런쿼리가 만들어짐-->
    <select id="getList" resultType="FacilityListDto">
        SELECT
        fi.fac_id,
        fi.fac_name,
        fi.fac_type,
        fi.fac_uid,
        fi.capacity,
        CASE
        WHEN SUM(CASE WHEN fr.rent_yn = 'N' THEN 1 ELSE 0 END) > 0 THEN 'N'
        ELSE 'Y'
        END AS rent_yn,
        MAX(fi.created_at) AS created_at,
        MAX(fi.created_by) AS created_by
        FROM facility_info fi
        LEFT JOIN facility_rent fr ON fi.fac_id = fr.fac_id
        <where>
            fi.del_yn = 'N'
            <if test="pDto.keyword != null and pDto.keyword != ''">
                AND (
                fi.fac_name LIKE CONCAT('%', #{pDto.keyword}, '%')
                OR fi.fac_id LIKE CONCAT('%', #{pDto.keyword}, '%')
                )
            </if>
            <if test="sDto.facType != null and sDto.facType != ''">
                AND fi.fac_type = #{sDto.facType}
            </if>
        </where>
        GROUP BY fi.fac_id
        <if test="sDto.rentYn != null and sDto.rentYn != ''">
            HAVING rent_yn = #{sDto.rentYn}
        </if>
        ORDER BY rent_yn DESC
        LIMIT #{pDto.startNum}, #{pDto.itemsPerPage}
    </select>


    <select id="findById" parameterType="String" resultType="FacilityRentDto">
        select *
        from facility_info
        where fac_id = #{val}
    </select>

    <insert id="insertFacility" parameterType="FacilityRentDto">
        INSERT INTO facility_rent (fac_id, fac_type, renter_id, rental_purpose,
                                   start_at, end_at, created_at, created_by, cancel_status)
        values (#{facId}, #{facType}, #{renterId}, #{rentalPurpose},
                #{startLocalDateTime}, #{endLocalDateTime}, now(), #{renterId}, #{cancelStatus})
    </insert>

    <select id="myReserveCount" resultType="int">
        select count(*)
        from facility_rent fr
        INNER JOIN facility_info fi ON fi.fac_id = fr.fac_id
        <where>
            fr.renter_id = #{loginId}
            <if test="sDto.keyword != null and sDto.keyword != ''">
                AND fi.fac_name LIKE CONCAT('%', #{sDto.keyword}, '%')
            </if>
            <if test="sDto.facType != null and sDto.facType != '' ">
                AND fr.fac_type = #{sDto.facType}
            </if>
            <if test="sDto.yearMonth != null and sDto.yearMonth != ''">
                AND DATE_FORMAT(fr.created_at, '%Y-%m') = #{sDto.yearMonth}
            </if>
            <if test="!sDto.includeCancel">
                AND fr.cancel_status = 'N'
            </if>
        </where>
    </select>

    <select id="myReservedList" resultType="MyFacilityReserveDto">
        SELECT
        fi.fac_id, c.comm_name, fi.fac_name,fi.fac_uid,fi.fac_type,
        fr.created_at, fr.start_at , fr.end_at , fr.renter_id ,fr.cancel_status , fr.rent_yn
        FROM facility_info fi
        INNER JOIN facility_rent fr ON fi.fac_id = fr.fac_id
        join common_type c on fr.fac_type = c.comm_code
        <where>
            fr.renter_id = #{loginId}
            <if test="pDto.keyword != null and pDto.keyword != ''">
                AND fi.fac_name LIKE CONCAT('%', #{pDto.keyword}, '%')
            </if>
            <if test="sDto.facType!=null and sDto.facType != '' ">
                AND fr.fac_type = #{sDto.facType}
            </if>
            <if test="sDto.yearMonth!=null and sDto.yearMonth != ''">
                AND DATE_FORMAT(fr.created_at, '%Y-%m') = #{sDto.yearMonth}
            </if>
            <if test="!sDto.includeCancel">
                AND fr.cancel_status = 'N'
            </if>
        </where>
        order by fr.rent_yn asc
        LIMIT #{pDto.startNum}, #{pDto.itemsPerPage}
    </select>

    <update id="reserveCancel">
        update facility_rent
        set cancel_status='Y',
            rent_yn='Y'
        where renter_id = #{loginId}
          and fac_id = #{facId}
    </update>

    <update id="returnFacility">
        update facility_rent
        set rent_yn='Y'
        where renter_id = #{loginId}
          and fac_id = #{facId}
    </update>

    <select id="maxFacId" resultType="String">
        select max(fac_id)
        from facility_info
    </select>

    <select id="findUid" resultType="int">
        select count(*)
        from facility_info
        where fac_type = #{facType}
          and fac_uid = #{facUid}
    </select>

    <insert id="insertFacilityByMng">
        insert into facility_info
        (fac_id, fac_type, fac_name, capacity, fac_uid, del_yn, created_by, created_at, updated_by, updated_at)
        values (#{dto.facId}, #{dto.facType}, #{dto.facName}, #{dto.capacity}, #{dto.facUid}, 'N', #{loginId}, now(),
                null, null)
    </insert>

    <!-- 혹시나 url로 접근에서 삭제를 시도할경우 반납이안된 공용설비는 삭제하지못하게-->
    <select id="findRentYn" parameterType="String" resultType="int">
        select count(fi.fac_id)
        from facility_info fi
                 join facility_rent fr on (fi.fac_id = fr.fac_id)
        where fr.rent_yn = 'N'
          and fi.fac_id = #{val}
    </select>

    <update id="deleteFacilityByMng">
        update facility_info
        set del_yn='Y',
            updated_at=now(),
            updated_by=#{loginId}
        where fac_id = #{facId}
    </update>

    <select id="findFacUid" resultType="int">
        select count(fac_uid)
        from facility_info
        where fac_uid = #{facUid}
    </select>

    <select id="selectReservations">
        SELECT fr.fac_id,
               c.comm_name,
               fi.fac_name,
               fi.fac_type,
               fr.renter_id,
               fr.start_at,
               fr.end_at
        FROM facility_info fi
                 INNER JOIN facility_rent fr ON fi.fac_id = fr.fac_id
                 join common_type c on fr.fac_type = c.comm_code
        WHERE fr.end_at >= NOW()
          AND fr.renter_id = #{loginId}
          AND fr.rent_yn = 'N'
          AND fr.cancel_status = 'N'
        ORDER BY fr.start_at ASC LIMIT 5
    </select>
</mapper>